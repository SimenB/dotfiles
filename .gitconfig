[user]
	name = Simen Bekkhus
	email = sbekkhus91@gmail.com

[core]
	editor = \"C:/Program Files (x86)/GitExtensions/GitExtensions.exe\" fileeditor
	ignorecase = false
	autocrlf = true

[http]
	sslVerify = false

[credential]
	helper = !"$APPDATA/GitCredStore/git-credential-winstore.exe"

[color]
	branch = auto
	diff = auto
	status = auto
	ui = auto

[color "branch"]
	current = red reverse
	local = blue
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[push]
	default = upstream

[pull]
	default = current

[branch]
	autosetuprebase = always

[diff]
	mnemonicprefix = true
	guitool = kdiff3

[difftool "kdiff3"]
	path = C:/Program Files/KDiff3/kdiff3.exe

[merge]
	tool = kdiff3

[mergetool "kdiff3"]
	path = C:/Program Files/KDiff3/kdiff3.exe

[rerere]
	enabled = true

[alias]
	br			= branch 
	co			= checkout
	st			= status
	di			= diff
	ds			= diff --staged
	wipe			= reset --hard HEAD
	wipes			= reset --hard origin/HEAD
	log-fancy		= log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan)<%an>%Creset' --abbrev-commit --date=relative --branches
	nice			= log --graph --decorate --pretty=oneline --abbrev-commit --date=relative
	panic			= !tar cvf ../git_panic.tar * --exclude='target/*' --exclude='*.class'
	wdiff			= diff --word-diff=plain

	la			= !grep '\t=' ~/.gitconfig | less
	#la			= "!grep '\t=' ~/.gitconfig | sed -e 's/=/^[[0;31m=^[[0m/g' | sed -e 's/#.*/^[[0;32m&^[[0m/g' | less -R"
	ignored			= ls-files --others -i --exclude-standard
	purr			= pull --rebase
	purrs			= !git stash && git purr && git stash pop
	ready			= rebase -i @{u}
	logs			= log --oneline --decorate
	s			= status -sb
	rb			= "!f() { git rebase HEAD~$1 -i; }; f"
	rbs			= "!f() { git stash && git rb $1 && git stash pop; }; f"
	amend 			= !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	fetchall		= fetch --all --verbose --prune
	standup			= !git log --since yesterday --author "\"$(git config user.name)"\" --decorate  --oneline
	week			= !git log --since="\"1 week ago\"" --author "\"$(git config user.name)"\" --decorate  --oneline
	update			= "!f() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git stash && git checkout $1 && git pull && git checkout $tmp_branch && git stash pop; unset tmp_branch; }; f"
	move-to			= "!f() { git stash && git checkout $1 && git stash pop; }; f"
	merge-to		= "!f() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git stash && git checkout $1 && git merge $tmp_branch && git checkout $tmp_branch && git stash pop; unset tmp_branch; }; f"
	merge-from		= "!f() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git stash && git checkout $1 && git pull && git checkout $tmp_branch && git merge $1 && git stash pop; unset tmp_branch; }; f"
	commits-since		= shortlog -sn --no-merges --since
	commits-on-since	= "!f() { export tmp_branch=`git branch | grep '* ' | tr -d '* '` && git checkout $1 && git commits-since $2 && git checkout $tmp_branch;  unset tmp_branch; }; f"
